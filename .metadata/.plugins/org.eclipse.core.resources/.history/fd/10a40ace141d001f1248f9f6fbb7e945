package com.project.myWeb.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration // 설정 파일
@EnableWebSecurity // 이 설정 파일을 시큐리티 필터에 등록
public class SecurityConfig {
	
	@Bean
	public BCryptPasswordEncoder encoder() {
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception{
		
		
		http.csrf().disable();
		
		
		http.authorizeRequests( (authorize) -> authorize
				.antMatchers("/all").authenticated()
				.antMatchers("/user/**").hasAnyRole("USER", "ADMIN", "TESTER")
				.antMatchers("/admin/**").hasRole("ADMIN")
				.anyRequest().permitAll()
				)
		; 
		
		http.formLogin()
			.loginPage("/login")
			.loginProcessingUrl("/loginForm") //로그인을 시도하는 경로 작성
			.defaultSuccessUrl("/hello") // 로그인 성공 후 이동하고자 하는 경로 
			//.usernameParameter("id") //username이 아닌 다른 값으로 변경 가능
			//.passwordParameter(null) // pasword 가 아닌 다른 값으로 변경
			; 
		
		return http.build();
	}
}
